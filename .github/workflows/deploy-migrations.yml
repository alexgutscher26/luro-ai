name: Deploy Migrations

on:
  push:
    branches: [main]
    paths:
      - 'prisma/migrations/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  deploy-staging:
    if: github.ref == 'refs/heads/main' || github.event.inputs.environment == 'staging'
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Deploy migrations to staging
        env:
          DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}
          NODE_ENV: staging
          MIGRATION_APPROVED: true
        run: |
          echo "Deploying migrations to staging..."
          tsx scripts/migrate.ts deploy
          
      - name: Notify deployment
        if: success()
        run: |
          echo "âœ… Staging migrations deployed successfully"
          
  deploy-production:
    if: github.event.inputs.environment == 'production'
    runs-on: ubuntu-latest
    environment: production
    needs: [deploy-staging]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Deploy migrations to production
        env:
          DATABASE_URL: ${{ secrets.PRODUCTION_DATABASE_URL }}
          NODE_ENV: production
          MIGRATION_APPROVED: true
        run: |
          echo "Deploying migrations to production..."
          tsx scripts/migrate.ts deploy
          
      - name: Notify deployment
        if: success()
        run: |
          echo "ðŸš€ Production migrations deployed successfully"